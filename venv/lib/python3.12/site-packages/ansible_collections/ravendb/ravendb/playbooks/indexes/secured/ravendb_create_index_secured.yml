---
- name: Create Index
  hosts: localhost
  gather_facts: no

  roles:
    - ravendb.ravendb.ravendb_python_client_prerequisites

  tasks:
    - name: Ensure RavenDB Index is present (check mode)
      become: true
      ravendb.ravendb.index:
        url: "https://a.ravendbansible.development.run"
        certificate_path: /home/user/security/setup_package/admin.client.combined.pem
        database_name: "my_encrypted_db"
        index_name: "UsersByName"
        index_definition: 
          map: 
            - "from c in docs.Users select new { c.name, count = 5 }"
          reduce: >
            from result in results
            group result by result.name 
            into g 
            select new 
            { 
              name = g.Key, 
              count = g.Sum(x => x.count) 
            }
        state: present
      check_mode: yes

    - name: Ensure RavenDB Index is present
      become: true
      ravendb.ravendb.index:
        url: "https://a.ravendbansible.development.run"
        certificate_path: /home/user/security/setup_package/admin.client.combined.pem
        database_name: "my_encrypted_db"
        index_name: "UsersByName"
        index_definition: 
          map: 
            - "from c in docs.Users select new { c.name, count = 5 }"
          reduce: >
            from result in results
            group result by result.name 
            into g 
            select new 
            { 
              name = g.Key, 
              count = g.Sum(x => x.count) 
            }
        state: present

    - name: Ensure RavenDB Index is present (idempotency check)
      become: true
      ravendb.ravendb.index:
        url: "https://a.ravendbansible.development.run"
        certificate_path: /home/user/security/setup_package/admin.client.combined.pem
        database_name: "my_encrypted_db"
        index_name: "UsersByName"
        index_definition: 
          map: 
            - "from c in docs.Users select new { c.name, count = 5 }"
          reduce: >
            from result in results
            group result by result.name 
            into g 
            select new 
            { 
              name = g.Key, 
              count = g.Sum(x => x.count) 
            }
        state: present
